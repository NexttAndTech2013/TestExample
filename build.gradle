buildscript {
    ext {
        springBootVersion = '2.0.6.RELEASE'
        kotlinVersion = '1.2.71'
        jacksonModuleKotlin = '2.9.7'
        jaxbApiVersion = '2.3.0'

        // tests
        junitJuniper = '5.1.1'
        junitGradlePlatformVersion = '1.1.0'
        assertJCoreVersion = '3.11.1'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junitGradlePlatformVersion"
    }
}

apply plugin: 'java'
apply plugin: "kotlin"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.nextt.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "javax.xml.bind:jaxb-api:$jaxbApiVersion" // needed for Java 8

    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.postgresql:postgresql"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonModuleKotlin"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJuniper"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJuniper"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
    testCompile "org.assertj:assertj-core:$assertJCoreVersion"
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}
